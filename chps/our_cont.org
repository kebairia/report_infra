* Our Contribution
** Main contribution of our project
** System Design
#+NAME: fig:overall_arch_old
#+caption: The old architecture approach
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/overall_old.png]]

#+NAME: fig:overall_arch
#+caption: The overall architecture
#+ATTR_LATEX: :float sideways
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/overall.png]]

#+NAME: fig:workflow
#+caption: The Workflow we followed
#+ATTR_LATEX: :float sideways
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/workflow.png]]
** System implementation
*** Compute Units (Virtualization)
:PROPERTIES:
:CUSTOM_ID: virt
:END:

#+NAME: fig:virt_overall_virt
#+caption: Virtualization
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/virt/overall_virt.png]]
*** Provisioning & Automation
:PROPERTIES:
:CUSTOM_ID: pr_and_auto
:END:
**** Vagrant 
**** Ansible

*** Container Orchestration
:PROPERTIES:
:CUSTOM_ID: cont_and_micro
:END:
**** Kubernetes 
**** Docker
*** High availability and Load Balancing
:PROPERTIES:
:CUSTOM_ID: ha
:END:

@@latex:\noindent@@
In order to achieve a higher level of high availability for our services and virtual machines,
we used a variety of technologies and methodologies, and we'll go through the different ways,
why we use them, and their benefits and drawback below.

#+NAME: fig:overall_ha_diagram
#+caption: High Availibility diagram
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/ha/overall_ha_diagram.png]]
**** Failover services 
@@latex:\noindent@@
When attempting to implement a highly available service, we must consider the type of service
for which we are attempting to do this.

When an active application, server, system, hardware component, or network in a computer network
fails or terminates abnormally, /failover/ switches to a redundant or standby computer server,
system, hardware component, or network.

Many services, like as acrshort:dns and acrshort:dhcp, have built-in failover, and we took advantage of this
to establish a highly available service, especially for crucial services like these.

This offload the burden of implementing the failover yourself, moreover, if a service implements
the failover itself, it is more likely to be well integrated and supported than if you do it
yourself with additional apps.
# additional apps means additional threats

{{{fourstar}}}
Take, for example, DNS service. When attempting to establish a DNS service, you will find
three sorts of dns servers: a Primary acrshort:dns server, a Secondary acrshort:dns server, and a Cache-only server.
In this case, the secondary acrshort:dns servers serve as failover for the primary one, meaning
that if the primary acrshort:dns server fails, the backup DNS server takes over and handles
the queries.

We used the =named= package to implement our acrshort:dns server, and the package support the setup of
a primary and secondary dns server.
With the use a priority concept in the configuration file, we can put a lower priority value
on the secondary dns server configuration file, and by that it will be a backup server.
On the client machines, and by using the =NetworkManager= utility, we can specify up to 4 acrshort:dns
servers in the =/etc/resolv.conf=, and this is more than enough.
**** HAProxy & Keepalived
**** Pacemaker
*** Network Configuration

#+NAME: fig:network_net_types_and_confs
#+caption: Network types that we used and their configurations
#+attr_latex: :width 12cm
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/network/net_conf_and_mnm_configuration.png]]
**** Management Network
**** Public Network & Bridged Network
#+NAME: fig:network_public_bridge_network
#+caption: How Public interfaces and bridge network work
#+attr_latex: :width 12cm
[[file:~/dox/wrk/pfe/docs/pfe_thesis/figures/network/network_bridge_private_pfe.png]]
**** Private Network
*** Storage
:PROPERTIES:
:CUSTOM_ID: storage
:END:
**** GlusterFS
**** NFS
**** NFS-Ganesha
*** Security
:PROPERTIES:
:CUSTOM_ID: sec
:END:
**** OpenVPN 
*** Test and Results
*** Conclusion

* Local Variables                                           :noexport:ignore:
# Local Variables:
# mode: org
# org-export-allow-bind-keywords: t
# eval: (setq display-fill-column-indicator-column 100)
# eval: (display-fill-column-indicator-mode)
# eval: (flyspell-mode t)
# End:
